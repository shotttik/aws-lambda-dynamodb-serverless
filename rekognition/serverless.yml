# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: rekognition

frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.9
  region: ${file(../configuration.json):region}
  environment:
    DYNAMO_DB_TABLE: ${file(../configuration.json):dynamoDBtable}
    SECOND_DYNAMO_DB_TABLE: ${file(../configuration.json):dynamoDBtable}
    REKOGNITION_SNS_TOPIC_ARN: ${self:custom.rekognitionSNSTopicArn}
    REKOGNITION_ROLE_ARN: ${file(../configuration.json):lambdaRole}

functions:
  carnetsAndRekognitions:
    handler: handler.lambda_handler
    role: ${file(../configuration.json):lambdaRole}
    events:
      - s3:
          bucket: ${file(../configuration.json):s3BucketName}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .gif
      - s3:
          bucket: ${file(../configuration.json):s3BucketName}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .jpg
      - s3:
          bucket: ${file(../configuration.json):s3BucketName}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .jpeg
      - s3:
          bucket: ${file(../configuration.json):s3BucketName}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .png
    environment:
      DYNAMO_DB_TABLE: ${file(../configuration.json):dynamoDBtable}
      SECOND_DYNAMO_DB_TABLE: ${file(../configuration.json):secondDynamoDBtable}

custom:
  rekognitionSNSTopicArn:
    Fn::Join:
      - ":"
      - - arn
        - aws
        - sns
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - willNotifyWhenRekognitionDone
  pythonRequirements:
    usePipenv: true

resources:
  Resources:
    carnetTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${file(../configuration.json):dynamoDBtable}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    rekogintionTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${file(../configuration.json):secondDynamoDBtable}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-python-requirements
